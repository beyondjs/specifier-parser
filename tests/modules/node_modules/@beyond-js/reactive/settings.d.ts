/************
Processor: ts
************/

// index.ts
declare namespace ns_0 {
  import IConfig = ns_1.IConfig;
  export class ReactiveConfig {
    #private;
    static adapter: IConfig['adapter'];
    static set(config: IConfig): void;
  }
}


// interface.ts
declare namespace ns_1 {
  interface IResponseAdapter {
    toClient: (data: any) => any;
    fromRemote: (data: any) => any;
    fromRemoteList?: (data: any) => any;
  }
  export type TCustomAdapter = new () => IResponseAdapter;
  export interface IConfig {
    adapter: 'default' | 'legacy' | TCustomAdapter;
  }
  export {};
}


export import ReactiveConfig = ns_0.ReactiveConfig;
export import TCustomAdapter = ns_1.TCustomAdapter;
export import IConfig = ns_1.IConfig;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };